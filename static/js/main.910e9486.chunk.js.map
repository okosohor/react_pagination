{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","curentPage","onPageChange","visiblePageCount","Math","ceil","visiblePages","isLastPage","className","cn","disabled","href","onClick","map","page","active","items","App","useState","setPerPage","setCurentPage","length","visibleItemStartIndex","visibleItemEndIndex","visibleItems","slice","lastItemOnVisibilePage","visibleItemsOnPage","paginationInfo","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAEMC,EAAmBC,KAAKC,KAAKN,EAAQC,GACrCM,EAAed,EAAW,EAAGW,GAC7BI,EAAaN,IAAeE,EAalC,OACE,qBAAIK,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAyB,IAAfT,IAA3C,SACE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA8B,IAAfV,EACfW,QAdqB,WACR,IAAfX,GACFC,EAAaD,EAAa,IAOxB,oBAUDK,EAAaO,KAAI,SAAAC,GAAI,OACpB,oBAEEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAASb,IAHrB,SAME,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAXEA,MAeT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUT,IAAeE,IAD3B,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAnDqB,WACtBL,GACHL,EAAaD,EAAa,IA4CxB,wBC5DFe,EAAQxB,EAAW,EAAG,IACzBqB,KAAI,SAAAjB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAoCD,mBAAS,GAA7C,mBAAOjB,EAAP,KAAmBmB,EAAnB,KAEMrB,EAAQiB,EAAMK,OACdC,EAAwBtB,EAAUC,EAAaD,EAC/CuB,EAAsBvB,EAAUC,EAChCuB,EAAeR,EAAMS,MAAMH,EAAuBC,GAGlDG,EAAyB1B,EAAUC,EAAaF,EAClDC,EAAUC,EACVF,EAEE4B,EAAkB,UALQ3B,EAAUC,EAAaD,EAAU,EAKzC,cAAmC0B,GAErDE,EAAc,eAAW3B,EAAX,aAA0B0B,EAA1B,eAAmD5B,EAAnD,KAMpB,OACE,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACGoB,IAGH,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAO9B,EACP+B,SApBW,SAACC,GACpBb,GAAYa,EAAMC,OAAOH,OACzBV,EAAc,IAaR,UAOE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPC,QAASA,EACTC,WAAYA,EACZC,aAAckB,IAGhB,6BACGI,EAAaX,KAAI,SAAAsB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.910e9486.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number\n  curentPage: number,\n  onPageChange: (number: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  curentPage,\n  onPageChange,\n}) => {\n  const visiblePageCount = Math.ceil(total / perPage);\n  const visiblePages = getNumbers(1, visiblePageCount);\n  const isLastPage = curentPage === visiblePageCount;\n  const nextPageClickHandler = () => {\n    if (!isLastPage) {\n      onPageChange(curentPage + 1);\n    }\n  };\n\n  const prevPageClickHandler = () => {\n    if (curentPage !== 1) {\n      onPageChange(curentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: curentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={curentPage === 1}\n          onClick={prevPageClickHandler}\n        >\n          «\n        </a>\n      </li>\n      {visiblePages.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', {\n            active: page === curentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', {\n        disabled: curentPage === visiblePageCount,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={nextPageClickHandler}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [curentPage, setCurentPage] = useState(1);\n\n  const total = items.length;\n  const visibleItemStartIndex = perPage * curentPage - perPage;\n  const visibleItemEndIndex = perPage * curentPage;\n  const visibleItems = items.slice(visibleItemStartIndex, visibleItemEndIndex);\n\n  const firstItemOnVisibilePage = perPage * curentPage - perPage + 1;\n  const lastItemOnVisibilePage = perPage * curentPage < total\n    ? perPage * curentPage\n    : total;\n\n  const visibleItemsOnPage = `${firstItemOnVisibilePage} - ${lastItemOnVisibilePage}`;\n\n  const paginationInfo = `Page ${curentPage} (${visibleItemsOnPage} of ${total})`;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {paginationInfo}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        curentPage={curentPage}\n        onPageChange={setCurentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}